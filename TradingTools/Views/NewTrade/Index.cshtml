@{
    ViewData["Title"] = "Paper Trades";
}

<div class="row justify-content-center align-items-top">
    <div class="col-10 text-center">
        <h2>New Trade</h2>
        <div class="container mb-4">
            <div class="row justify-content-center">
                <div class="col-12 col-md-auto d-flex align-items-center flex-wrap justify-content-center">
                    <!-- Menu Time Frame -->
                    <div class="col-auto p-2">
                        <div class="dropdown">
                            <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton"
                                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Time Frame: <span id="spanTimeFrame"></span>
                            </button>
                            <div class="dropdown-menu animated--fade-in" id="dropdownBtnTimeFrame" aria-labelledby="dropdownMenuButton">
                                @foreach (TimeFrame tf in Enum.GetValues(typeof(TimeFrame)))
                                {
                                    <a class="dropdown-item" role="button">@MyEnumConverter.TimeFrameFromEnum(tf)</a>
                                }
                            </div>
                        </div>
                    </div>
                    <!-- Menu Strategy -->
                    <div class="col-auto p-2">
                        <div class="dropdown">
                            <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Strategy: <span id="spanStrategy"></span>
                            </button>
                            <div class="dropdown-menu animated--fade-in" id="dropdownBtnStrategy" aria-labelledby="dropdownMenuButton">
                                @foreach (Strategy strategy in Enum.GetValues(typeof(Strategy)))
                                {
                                    <a class="dropdown-item" role="button">@MyEnumConverter.StrategyFromEnum(strategy)</a>
                                }
                            </div>
                        </div>
                    </div>
                    <!-- Menu Trade Type -->
                    <div class="col-auto p-2">
                        <div class="dropdown">
                            <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Trade Type: <span id="spanTradeType"></span>
                            </button>
                            <div class="dropdown-menu animated--fade-in" id="dropdownBtnTradeType" aria-labelledby="dropdownMenuButton">
                                @foreach (TradeType tradeType in Enum.GetValues(typeof(TradeType)))
                                {
                                    <a class="dropdown-item" role="button">@tradeType.ToString()</a>
                                }
                            </div>
                        </div>
                    </div>
                    <!-- Menu Trade Side -->
                    <div class="col-auto p-2">
                        <div class="dropdown">
                            <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Side: <span id="spanTradeSide"></span>
                            </button>
                            <div class="dropdown-menu animated--fade-in" id="dropdownBtnStrategy" aria-labelledby="dropdownMenuButton">
                                @foreach (SideType sideType in Enum.GetValues(typeof(SideType)))
                                {
                                    <a class="dropdown-item" role="button">@sideType.ToString()</a>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="d-flex justify-content-center align-items-center mt-4">
                    <div class="card border-left-success shadow">
                        <div class="card-body d-flex justify-content-around align-items-center">
                            <div class="text-center p-4 btn" style="border: 2px dashed #ccc;" style="cursor: pointer;" onclick="document.getElementById('filesInput').click()">
                                <!-- Upload trades (when the DB is empty) -->
                                <div class="d-flex justify-content-center align-items-center">
                                    <form method="post" enctype="multipart/form-data" id="formUploadFiles" asp-action="UploadScreenshots">
                                        <a role="button" class="button">
                                            <input type="file" name="screenshots" id="filesInput" class="d-none" />
                                            <i class="fa-solid fa-file-arrow-up fa-2x text-primary"></i>
                                            <span class="mt-2" style="display: block;">Upload Screenshots</span>
                                        </a>
                                    </form>
                                </div>
                            </div>
                            <div class="text-center p-4" id="uploadedScreenshotsArea">
                                <p>Additional content goes here.</p>
                                <!-- You can add more content as needed -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/newTrade.js"></script>
}

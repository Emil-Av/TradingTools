@model PaperTradesVM

<partial name="~/Views/Shared/_LoadingIndicator.cshtml" />
<div class="hideMyContent" id="myContent">
    <div class="row justify-content-center align-items-top">
        <div class="col-10 text-center">
            <h2>
                @(Model.CurrentTrade != null ? "Paper Trades" : "No Paper Trades Yet")
            </h2>
            @if (Model.CurrentTrade != null)
            {
                <!-- Menus -->
                <div class="container mb-4">
                    <div class="row justify-content-center">
                        <!-- Menu Time Frame -->
                        <div class="col-auto p-2">
                            <div class="dropdown">
                                <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton"
                                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Time Frame: <span id="currentTimeFrame">@MyEnumConverter.SetTimeFrameFromEnum(Model.CurrentTrade.TimeFrame)</span>
                                </button>
                                <div class="dropdown-menu animated--fade-in" id="menuTimeFrame" aria-labelledby="dropdownMenuButton">
                                    @foreach (TimeFrame tf in Enum.GetValues(typeof(TimeFrame)))
                                    {
                                        <a class="dropdown-item" href="#">@MyEnumConverter.SetTimeFrameFromEnum(tf)</a>
                                    }
                                </div>
                            </div>
                        </div>
                        <!-- Menu Strategy -->
                        <div class="col-auto p-2">
                            <div class="dropdown">
                                <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Strategy: <span id="currentStrategy">@MyEnumConverter.SetStrategyFromEnum(Model.CurrentTrade.Strategy)</span>
                                </button>
                                <div class="dropdown-menu animated--fade-in" id="menuStrategy" aria-labelledby="dropdownMenuButton">
                                    @foreach (Strategy strategy in Enum.GetValues(typeof(Strategy)))
                                    {
                                        <a class="dropdown-item" href="#">@MyEnumConverter.SetStrategyFromEnum(strategy)</a>
                                    }
                                </div>
                            </div>
                        </div>
                        <!-- Menu Sample Size -->
                        <div class="col-auto p-2">
                            <div class="dropdown">
                                <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Sample Size: <span id="currentSampleSize">@(Model.NumberSampleSizes)</span>
                                </button>
                                <div class="dropdown-menu animated--fade-in" id="menuSampleSize" aria-labelledby="dropdownMenuButton">
                                    @for (int i = 0; i < Model.NumberSampleSizes; i++)
                                    {
                                        <a class="dropdown-item" href="#">@(Model.NumberSampleSizes - i)</a>
                                    }
                                </div>
                            </div>
                        </div>
                        <!-- Menu Trade -->
                        <div class="col-auto p-2">
                            <div class="dropdown">
                                <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Trade: <span id="currentTrade">@Model.TradesInSampleSize</span>
                                </button>
                                <div class="dropdown-menu animated--fade-in" id="menuTrade" aria-labelledby="dropdownMenuButton">
                                    @for (int i = 0; i < Model.TradesInSampleSize; i++)
                                    {
                                        <a class="dropdown-item" role="button">@(Model.TradesInSampleSize - i)</a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Images -->
                <div class="row justify-content-center">
                    <div class="col-10">
                        <div id="carouselTrades" class="carousel slide" data-interval="false">
                            <div id="imageContainer">
                                <ol class="carousel-indicators">
                                    @for (int i = 0; i < Model.CurrentTrade.ScreenshotsUrls.Count; i++)
                                    {
                                        <li data-bs-target="#carouselTrades" data-slide-to="@(i)" @(i == 0 ? "class=\"active\"" : "")></li>
                                    }
                                </ol>
                                <div class="carousel-inner">

                                    @for (int i = 0; i < Model.CurrentTrade.ScreenshotsUrls.Count; i++)
                                    {
                                        <div class="@(i == 0? "carousel-item active" : "carousel-item")">
                                            <img src="@Model.CurrentTrade.ScreenshotsUrls[i]" class="d-block w-100" alt="...">
                                        </div>
                                    }
                                </div>
                            </div>
                            <a class="carousel-control-prev" href="#carouselTrades" role="button" data-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="sr-only">Previous</span>
                            </a>
                            <a class="carousel-control-next" href="#carouselTrades" type="button" data-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="sr-only">Next</span>
                            </a>
                        </div>
                    </div>
                </div>

                <!-- Journaling begin -->
                <div class="row justify-content-center mt-3">
                    <div class="col-10 text-center">
                        <div class="card shadow mb-4">
                            <div class="card-header py-3">
                                <div class="row align-items-center">
                                    <div class="col-auto">
                                        <h6 class="m-0 font-weight-bold text-primary">Journal</h6>
                                    </div>
                                    <div class="col mr-md-5">
                                        <ul class="nav justify-content-center">
                                            <li class="nav-item">
                                                <a class="dropdown-item" href="#">Pre</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="dropdown-item" href="#">During</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="dropdown-item" href="#">Exit</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="dropdown-item" href="#">Post</a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                            <div class="card-body">
                                The styling for this basic card example is created by using default Bootstrap
                                utility classes. By using utility classes, the style of the card component can be
                                easily modified with no need for any custom CSS!
                                The styling for this basic card example is created by using default Bootstrap
                                utility classes. By using utility classes, the style of the card component can be
                                easily modified with no need for any custom CSS!
                                The styling for this basic card example is created by using default Bootstrap
                                utility classes. By using utility classes, the style of the card component can be
                                easily modified with no need for any custom CSS!
                            </div>
                        </div>
                    </div>
                    <!-- Journaling End  -->
                </div>
            }
            else
            {
                // Upload trades (when the DB is empty)
                <form method="post" enctype="multipart/form-data" id="formUploadFile" asp-action="UploadTrades">
                    <input type="file" name="zipFile" id="fileInput" style="display:none" accept=".zip" />
                    <a class="button d-flex flex-column align-items-center justify-content-center mt-5" role="button" id="uploadFileButton" onclick="document.getElementById('fileInput').click()">
                        <i class="fa-regular fa-folder-open fa-2xl mb-3"></i>
                        <span>Upload Trades</span>
                    </a>
                </form>
            }
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/js/paperTrades.js"></script>
    <script src="~/js/toastr.min.js"></script>
}
@* https://summernote.org/ *@
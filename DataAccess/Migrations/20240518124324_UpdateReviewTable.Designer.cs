// <auto-generated />
using System;
using DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240518124324_UpdateReviewTable")]
    partial class UpdateReviewTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("During")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaperTradeId")
                        .HasColumnType("int");

                    b.Property<string>("Post")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PaperTradeId");

                    b.ToTable("Journals");
                });

            modelBuilder.Entity("Models.PaperTrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("EntryPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("EntryTime")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ExitPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ExitTime")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Fee")
                        .HasColumnType("float");

                    b.Property<double?>("FirstTarget")
                        .HasColumnType("float");

                    b.Property<double?>("Loss")
                        .HasColumnType("float");

                    b.Property<int?>("OrderType")
                        .HasColumnType("int");

                    b.Property<double?>("Profit")
                        .HasColumnType("float");

                    b.Property<int>("SampleSizeId")
                        .HasColumnType("int");

                    b.Property<string>("ScreenshotsUrls")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("SecondTarget")
                        .HasColumnType("float");

                    b.Property<int?>("SideType")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<double?>("StopPrice")
                        .HasColumnType("float");

                    b.Property<int?>("Strategy")
                        .HasColumnType("int");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TimeFrame")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TradeDuration")
                        .HasColumnType("datetime2");

                    b.Property<double?>("TriggerPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SampleSizeId");

                    b.ToTable("PaperTrades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SampleSizeId = 0,
                            ScreenshotsUrls = "[\"~/img/myimg/1.png\",\"~/img/myimg/2.png\",\"~/img/myimg/3.png\"]",
                            Strategy = 0,
                            Symbol = "BTCUSD",
                            TimeFrame = 1
                        });
                });

            modelBuilder.Entity("Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("First")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Forth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Second")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Strategy")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Third")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TimeFrame")
                        .HasColumnType("int");

                    b.Property<int>("TradeType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Models.SampleSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Strategy")
                        .HasColumnType("int");

                    b.Property<int?>("TimeFrame")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SamplesSizes");
                });

            modelBuilder.Entity("Models.UserSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PTStrategy")
                        .HasColumnType("int");

                    b.Property<int>("PTTimeFrame")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("Models.Journal", b =>
                {
                    b.HasOne("Models.PaperTrade", "PaperTrade")
                        .WithMany()
                        .HasForeignKey("PaperTradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaperTrade");
                });

            modelBuilder.Entity("Models.PaperTrade", b =>
                {
                    b.HasOne("Models.SampleSize", "SampleSize")
                        .WithMany()
                        .HasForeignKey("SampleSizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SampleSize");
                });
#pragma warning restore 612, 618
        }
    }
}
